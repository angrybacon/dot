# -*- after-save-hook: (org-babel-tangle t); -*-
#+TITLE: Setting up Arch
#+AUTHOR: Mathieu Marques
#+PROPERTY: header-args :mkdirp yes :results silent

This file documents the steps I've followed to install my daily machine running
Arch.

* Bootstrap

** Increase the Key-Repeat Rate

=~/.profile=

#+BEGIN_SRC sh :tangle ~/.profile
xset r rate 200 50
#+END_SRC

** Core Dependencies and Paru

#+BEGIN_SRC sh
pacman -S base-devel cmake git
#+END_SRC

Paru is now stable enough that it should be preferred over =yay=.

#+BEGIN_SRC sh
git clone https://aur.archlinux.org/paru.git /tmp/paru
cd /tmp/paru
makepkg -si
#+END_SRC

** Node.js

Install the Node version manager. See https://github.com/nvm-sh/nvm for more
details.

#+BEGIN_SRC emacs-lisp
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash
nvm install node
#+END_SRC

And install additional utilities =npm= and =yarn= globally in case packages
don't support NVM paths.

#+BEGIN_SRC sh
paru -S npm yarn
#+END_SRC

** Shell

I like =zsh= with the =pure= prompt.

#+BEGIN_SRC sh
paru -S zsh-pure-prompt-git
#+END_SRC

=~/.zshrc=

#+BEGIN_SRC sh :tangle ~/.zshrc
# Aliases
alias diff='diff --color'
alias grep='grep --color --ignore-case'
alias la='ll -a'
alias ll='ls -ghlo'
alias ls='ls --color --group-directories-first'
alias rsync='rsync --human-readable --info=progress2'
alias tree='tree -C'

# Prompt
autoload -U promptinit; promptinit
prompt pure

# Node version manager
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

# Source manjaro-zsh-configuration
if [[ -e /usr/share/zsh/manjaro-zsh-config ]]; then
  source /usr/share/zsh/manjaro-zsh-config
fi
#+END_SRC

** Enable Asterisks During Password Prompts

Run =visudo= and add the =pwfeedback= option.

#+BEGIN_SRC diff
-Defaults env_reset
+Defaults env_reset,pwfeedback
#+END_SRC

** Graphics

Identify the installed drivers with either =mhwd= or =inxi=.

#+BEGIN_SRC sh
mhwd -li -d --pci
inxi -G
#+END_SRC

Identify the available drivers for the current configuration.

#+BEGIN_SRC sh
mhwd -l -d --pci
#+END_SRC

Install the recommended driver for the current configuration. If experiencing
issues related to the drivers, try switching between the =free= and =nonfree=
versions. For instance:

#+BEGIN_SRC sh
sudo mhwd -a pci free 0300
#+END_SRC

** X

=~.xinitrc=

#+BEGIN_SRC sh :shebang #!/bin/sh :tangle ~/.xinitrc
# Merge in defaults and keymaps
userresources=$HOME/.Xresources
usermodmap=$HOME/.Xmodmap
sysresources=/etc/X11/xinit/.Xresources
sysmodmap=/etc/X11/xinit/.Xmodmap
if [ -f $sysresources ]; then
    xrdb -merge $sysresources
fi
if [ -f $sysmodmap ]; then
    xmodmap $sysmodmap
fi
if [ -f "$userresources" ]; then
    xrdb -merge "$userresources"
fi
if [ -f "$usermodmap" ]; then
    xmodmap "$usermodmap"
fi

# Start xinit modules
if [ -d /etc/X11/xinit/xinitrc.d ] ; then
    for f in /etc/X11/xinit/xinitrc.d/?*.sh ; do
        [ -x "$f" ] && . "$f"
    done
    unset f
fi
#+END_SRC

=~/.xprofile=

#+BEGIN_SRC sh :shebang #!/bin/sh :tangle ~/.xprofile
# Start compositor
picom --experimental-backends &
#+END_SRC

* Desktop

I typically use EXWM (https://github.com/ch11ng/exwm) as my window manager, but
once in a while I'll log in something more stable -- read when I break my system
-- like Gnome.

Speed up the key-repeat rate.

#+BEGIN_SRC sh
gsettings set org.gnome.desktop.peripherals.keyboard delay 200
gsettings set org.gnome.desktop.peripherals.keyboard repeat-interval 20
#+END_SRC

* Emacs

Install the preferred =gccemacs=. Details at http://akrl.sdf.org/gccemacs.html.
CMake is necessary in order to compile the dependencies to =vterm= at runtime.

#+BEGIN_SRC sh
paru -S emacs-native-comp-git
#+END_SRC

See my Emacs configuration: [[https://github.com/angrybacon/dotemacs]].

* Fonts

Install my favorite fonts.

#+BEGIN_SRC sh
paru -S \
    ttf-cascadia-code \
    ttf-google-sans \
    ttf-roboto \
    ttf-roboto-slab
#+END_SRC

* Git

=~/.gitconfig=

#+BEGIN_SRC conf :tangle ~/.gitconfig
[user]
	email = mathieumarques78@gmail.com
	name = Mathieu Marques
[core]
	excludesfile = ~/.gitignore
[pull]
	rebase = true
[rebase]
	autosquash = true
#+END_SRC

=~/.gitignore=

#+BEGIN_SRC conf :tangle ~/.gitignore
.dir-locals.el
.projectile
.log/
#+END_SRC

* Plex

** Dependencies

Install the server.

#+BEGIN_SRC sh
paru -S plex-media-server
#+END_SRC

** Permissions

Create a mount point for an external drive named =Phoenix= that the =plex= user
will be able to access.

#+BEGIN_SRC sh
sudo mkdir -p /media/phoenix
sudo chmod -R /media
#+END_SRC

Retrieve the UUID of the drive (with =df= and =blkid= for instance) and add the
corresponding entry at the bottom of =/etc/fstab=.

#+BEGIN_SRC diff
+UUID=1234-ABCD  /media/phoenix  exfat
#+END_SRC

Reboot and confirm that the drive is correctly mounted to the expected location.

** Start the Service Automatically on Startup

Enable the server for future sessions automatically and optionally start it now.

#+BEGIN_SRC sh
systemctl start plexmediaserver.service
systemctl enable plexmediaserver.service
#+END_SRC

Visit http://localhost:32400/ and add the media libraries.

** Fix the Claim Server Prompt

To grant writing permissions to the =plex= user on the preference file, first
stop the server.

#+BEGIN_SRC sh
systemctl stop plexmediaserver.service
#+END_SRC

Confirm the location of the preference file. It should be somewhere in
=/var/lib/plex/=. Then update its owner.

#+BEGIN_SRC sh
sudo chown -R plex:plex /var/lib/plex
#+END_SRC

Start the server again.

#+BEGIN_SRC sh
systemctl start plexmediaserver.service
#+END_SRC

* SSH

#+BEGIN_SRC sh
paru -S openssh
ssh-keygen -t rsa -b 4096
#+END_SRC

* Other Utilities

#+BEGIN_SRC sh
paru -S \
    emoji-keyboard \
    htop \
    tree
#+END_SRC

* Other Applications

#+BEGIN_SRC sh
paru -S \
    brave chromium firefox-developer-edition \
    cockatrice \
    discord \
    piper \
    qbittorrent \
    signal-desktop \
    slack-desktop \
    spotify \
    vlc
#+END_SRC
