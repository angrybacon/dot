# -*- after-save-hook: (org-babel-tangle t); -*-
#+TITLE: Linux
#+AUTHOR: Mathieu Marques
#+PROPERTY: header-args :results silent

This file documents the steps I've followed to install my daily machine running
Arch.

* Bootstrap

** X

=~/.profile=

#+BEGIN_SRC sh :tangle ~/.profile
# Automatically start X
if [ -z "${DISPLAY}" ] && [ "${XDG_VTNR}" -eq 1 ]; then
  exec startx
fi

# Increase the Key-Repeat Rate
xset r rate 200 50
#+END_SRC

Optionally, create a =.zprofile= link to the profile file.

#+BEGIN_SRC sh
ln -s ~/.profile ~/.zprofile
#+END_SRC

** Core Dependencies and =paru=

#+BEGIN_SRC sh
pacman -S base-devel cmake git
#+END_SRC

Paru is now stable enough that it should be preferred over =yay=.

#+BEGIN_SRC sh
git clone https://aur.archlinux.org/paru.git /tmp/paru
cd /tmp/paru
makepkg -si
#+END_SRC

** Visudo

Run =visudo= in order to customize sudoers settings.

*** Change the Default Editor

#+BEGIN_SRC diff
+Defaults editor=/usr/bin/vim
#+END_SRC

*** Enable Asterisks During Password Prompts

#+BEGIN_SRC diff
-Defaults env_reset
+Defaults env_reset,pwfeedback
#+END_SRC

** Node.js

Install the Node version manager. See https://github.com/nvm-sh/nvm for more
details.

#+BEGIN_SRC emacs-lisp
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash
nvm install node
#+END_SRC

And install additional utilities =npm= and =yarn= globally in case packages
don't support NVM paths.

#+BEGIN_SRC sh
paru -S npm yarn
#+END_SRC

* Shell

** Zsh

I like =zsh= with the =pure= prompt.

#+BEGIN_SRC sh
paru -S zsh zsh-pure-prompt-git
chsh -s $(which zsh)
#+END_SRC

=~/.zshrc=

#+BEGIN_SRC sh :tangle ~/.zshrc
# Add user-local path
export PATH=$PATH:~/.bin/

# Aliases
alias arecordvvv='arecord -vvv -f dat /dev/null'
alias diff='diff --color'
alias egrep='egrep --color'
alias fgrep='fgrep --color'
alias grep='grep --color --ignore-case'
alias la='ll -A'
alias ll='ls -ghlo'
alias lll='ls -hl'
alias ls='ls --color --group-directories-first'
alias rsync='rsync --human-readable --info=progress2'
alias tree='tree -C'

# Prompt
autoload -U promptinit; promptinit
prompt pure
#+END_SRC

** Terminal

See [[./config/alacritty.org]].

* Desktop

** Compositor

See [[./config/picom.org]].

** Theme

*** GTK

#+BEGIN_SRC sh
paru -S lxappearance materia-gtk-theme
#+END_SRC

Enable the theme in GTK settings through =lxappearance= and verify the
configuration file =~/.config/gtk-3.0/settings.ini=.

*** Qt

#+BEGIN_SRC sh
paru -S kvantum-qt5 kvantum-theme-materia
#+END_SRC

Then run =kvantummanager= to select your theme.

** Window Manager

*** Qtile

See [[./config/qtile.org]].

*** XMonad

See [[./config/xmonad.org]].

** Sound

#+BEGIN_SRC sh
paru -S alsa-utils pavucontrol
#+END_SRC

Make sure that the devices are correctly selected in =pavucontrol= and that the
=pulseaudio= server is running.

#+BEGIN_SRC sh
systemctl --user status pulseaudio.service
systemctl --user status pulseaudio.socket
#+END_SRC

Use the following command to detect input sound.

#+BEGIN_SRC sh
arecord -vv -f dat /dev/null
#+END_SRC

* Emacs

Install the preferred =gccemacs=. Details at http://akrl.sdf.org/gccemacs.html.
CMake is necessary in order to compile the dependencies to =vterm= at runtime.

#+BEGIN_SRC sh
paru -S cmake libgccjit
paru -G emacs-git
#+END_SRC

Edit =emacs-git/PKGBUILD= and enable just-in-time compilation.

#+BEGIN_SRC diff
-JIT=              # Enable native just-in-time compilation. libgccjit is in AUR.
+JIT="YES"         # Enable native just-in-time compilation. libgccjit is in AUR.
#+END_SRC

Install =emacs= with the new flags.

#+BEGIN_SRC sh
cd emacs-git/
makepkg -si
#+END_SRC

See my Emacs configuration: [[https://github.com/angrybacon/dotemacs]].

* Fonts

** Font Dependencies

Install my favorite fonts.

#+BEGIN_SRC sh
paru -S \
    noto-fonts-emoji \
    ttf-google-sans \
    ttf-monaco \
    ttf-roboto \
    ttf-roboto-slab
#+END_SRC

** Aliasing and Hinting

Enable aliasing and hinting presets.

#+BEGIN_SRC sh
rm -f /etc/fonts/conf.d/10-hinting-slight.conf
ln -s /etc/fonts/conf.avail/10-hinting-full.conf /etc/fonts/conf.d
ln -s /etc/fonts/conf.avail/10-sub-pixel-rgb.conf /etc/fonts/conf.d
ln -s /etc/fonts/conf.avail/11-lcdfilter-default.conf /etc/fonts/conf.d
ln -s /etc/fonts/conf.avail/70-no-bitmaps.conf /etc/fonts/conf.d
#+END_SRC

Uncomment FreeType hinting in =/etc/profile.d/freetype2.sh=.

#+BEGIN_SRC diff
-# export FREETYPE_PROPERTIES="truetype:interpreter-version=40"
+export FREETYPE_PROPERTIES="truetype:interpreter-version=40"
#+END_SRC

** Font Preferences

Set default font for classes in =/etc/fonts/local.conf=.

#+BEGIN_SRC xml :tangle /sudo:://etc/fonts/local.conf
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE fontconfig SYSTEM "urn:fontconfig:fonts.dtd">
<fontconfig>
  <match target="pattern">
    <test qual="any" name="family">
      <string>serif</string>
    </test>
    <edit name="family" mode="assign" binding="same">
      <string>Roboto Slab</string>
    </edit>
  </match>
  <match target="pattern">
    <test qual="any" name="family">
      <string>sans-serif</string>
    </test>
    <edit name="family" mode="assign" binding="same">
      <string>Roboto</string>
    </edit>
  </match>
  <match target="pattern">
    <test qual="any" name="family">
      <string>monospace</string>
    </test>
    <edit name="family" mode="assign" binding="same">
      <string>Monaco</string>
    </edit>
  </match>
</fontconfig>
#+END_SRC

* Git

=~/.gitconfig=

#+BEGIN_SRC conf :tangle ~/.gitconfig
[user]
	email = mathieumarques78@gmail.com
	name = Mathieu Marques
[core]
	excludesfile = ~/.gitignore
[pull]
	rebase = true
[rebase]
	autosquash = true
#+END_SRC

=~/.gitignore=

#+BEGIN_SRC conf :tangle ~/.gitignore
.dir-locals.el
.projectile
#+END_SRC

* Plex

** Dependencies

Install the server.

#+BEGIN_SRC sh
paru -S plex-media-server
#+END_SRC

** Permissions

Create a mount point for an external drive named =Phoenix= that the =plex= user
will be able to access.

#+BEGIN_SRC sh
sudo mkdir -p /media/phoenix
sudo chmod -R /media
#+END_SRC

Retrieve the UUID of the drive (with =df= and =blkid= for instance) and add the
corresponding entry at the bottom of =/etc/fstab=.

#+BEGIN_SRC diff
+UUID=1234-ABCD  /media/phoenix  exfat
#+END_SRC

Reboot and confirm that the drive is correctly mounted to the expected location.

** Start the Service Automatically on Startup

Enable the server for future sessions automatically and optionally start it now.

#+BEGIN_SRC sh
systemctl start plexmediaserver.service
systemctl enable plexmediaserver.service
#+END_SRC

Visit http://localhost:32400/web and add the media libraries.

** Fix the Claim Server Prompt

To grant writing permissions to the =plex= user on the preference file, first
stop the server.

#+BEGIN_SRC sh
systemctl stop plexmediaserver.service
#+END_SRC

Confirm the location of the preference file. It should be somewhere in
=/var/lib/plex/=. Then update its owner.

#+BEGIN_SRC sh
sudo chown -R plex:plex /var/lib/plex
#+END_SRC

Start the server again.

#+BEGIN_SRC sh
systemctl start plexmediaserver.service
#+END_SRC

* SSH

#+BEGIN_SRC sh
paru -S openssh
ssh-keygen -t rsa -b 4096
#+END_SRC

* Steam

Enable the =multilib= repositories in =/etc/pacman.conf=.

#+BEGIN_SRC diff
-#[multilib]
-#Include = /etc/pacman.d/mirrorlist
+[multilib]
+Include = /etc/pacman.d/mirrorlist
#+END_SRC

Upgrade the system and install the =steam= package.

#+BEGIN_SRC sh
paru -Syu
paru -S steam
#+END_SRC

* Other Applications

#+BEGIN_SRC sh
paru -S \
    brave-bin chromium firefox \        # Browsers
    discord slack-desktop \             # Chat
    cockatrice spotify vlc \            # Media
    qbittorrent \                       # Torrents
    piper \                             # System: peripherals
    gtop htop neofetch pfetch tree      # System: utilities
#+END_SRC
