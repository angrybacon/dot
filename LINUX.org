# -*- after-save-hook: (org-babel-tangle t); -*-
#+TITLE: Linux
#+AUTHOR: Mathieu Marques
#+PROPERTY: header-args :results silent

This file documents the steps I've followed to install my daily machine running
Debian.

* Checklist

** Install Core Dependencies and Packages

#+BEGIN_SRC sh
sudo apt install git pcmanfm vim
#+END_SRC

** Set a Maximum History of Snap Revisions

#+BEGIN_SRC sh
sudo snap set system refresh.retain=2
#+END_SRC

** Configure Visudo

Run =sudo visudo= in order to customize sudoers settings. Customize the default
editor to use.

#+BEGIN_SRC diff
+Defaults editor=/usr/bin/vim
#+END_SRC

Enable Asterisks During Password Prompts.

#+BEGIN_SRC diff
-Defaults env_reset
+Defaults env_reset, pwfeedback
#+END_SRC

* X

** =~/.profile=

Add user binaries path.

#+BEGIN_SRC sh :tangle ~/.profile
if [ -d "$HOME/.local/bin" ] ; then
  PATH="$HOME/.local/bin:$PATH"
fi
#+END_SRC

Add path for snaps.

#+BEGIN_SRC sh :tangle ~/.profile
if [ -d "/snap/bin" ] ; then
  PATH="/snap/bin:$PATH"
fi
#+END_SRC

Automatically start X.

#+BEGIN_SRC sh :tangle ~/.profile
if [ -z "${DISPLAY}" ] && [ "${XDG_VTNR}" -eq 1 ]; then
  exec startx
fi
#+END_SRC

Optionally, create a =.zprofile= link to the profile file.

#+BEGIN_SRC sh
ln -s ~/.profile ~/.zprofile
#+END_SRC

** =~/.Xresources=

Increase the base DPI by 25% and set base font for XTerm.

#+BEGIN_SRC conf :tangle ~/.Xresources
Xft.dpi: 120
XTerm*faceName: monospace:style=Regular
XTerm*faceSize: 14
#+END_SRC

** =~/.xinitrc=

Merge-in defaults.

#+BEGIN_SRC sh :shebang "#!/bin/sh" :tangle ~/.xinitrc
if [ -f "$HOME/.Xresources" ]; then
  xrdb -merge "$HOME/.Xresources"
fi
#+END_SRC

Bootstrap startup programs.

#+BEGIN_SRC sh :shebang "#!/bin/sh" :tangle ~/.xinitrc
xset r rate 200 50
picom &
pcmanfm --daemon-mode &
qtile start
#+END_SRC

** Automatically Mount External Drives

Given an external hard drive /Phoenix/ plugged in =sdb=.

#+BEGIN_SRC sh
sudo mkdir /media/Phoenix               # Create the mount point
sudo fdisk -l                           # Identify the drive
sudo blkid | grep sdb                   # Retrieve the UUID
#+END_SRC

Edit =/etc/fstab= to add the drive mount point.

#+BEGIN_SRC diff
+UUID=F8D2-30CF  /media/Phoenix  exfat  defaults  0  0
#+END_SRC

Confirm proper mouting with =sudo mount -a=.

* Shell

** Zsh

Install =zsh= then set it as your default shell.

#+BEGIN_SRC sh
chsh -s $(which zsh)
#+END_SRC

See [[./config/zsh.org][config/zsh.org]].

** Terminal

See [[./config/kitty.org][config/kitty.org]].

* Fonts

** Font Dependencies

Other sections from this document will assume these fonts are already installed:

- Cascadia Code
- Google Sans
- Roboto Slab

To manually install the fonts, download their respective TTF or OTF files and
move them to =/usr/local/share/fonts/=. Run =fc-cache= to ensure the font cache
integrity.

** Font Preferences

Set default fonts for =monospace=, =serif= and =sans-serif= classes.

#+BEGIN_SRC xml :tangle /sudo::/etc/fonts/local.conf
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE fontconfig SYSTEM "urn:fontconfig:fonts.dtd">
<fontconfig>
  <match target="pattern">
    <test qual="any" name="family">
      <string>monospace</string>
    </test>
    <edit name="family" mode="assign" binding="same">
      <string>Cascadia Code</string>
    </edit>
  </match>
  <match target="pattern">
    <test qual="any" name="family">
      <string>sans-serif</string>
    </test>
    <edit name="family" mode="assign" binding="same">
      <string>Google Sans</string>
    </edit>
  </match>
  <match target="pattern">
    <test qual="any" name="family">
      <string>serif</string>
    </test>
    <edit name="family" mode="assign" binding="same">
      <string>Roboto Slab</string>
    </edit>
  </match>
</fontconfig>
#+END_SRC

* Desktop

** Compositor

See [[./config/picom.org][config/picom.org]].

** Window Manager

I use =qtile= daily but other historical configuration can be found below.

*** Qtile

See [[./config/qtile.org][config/qtile.org]].

*** XMonad

See [[./config/xmonad.org][config/xmonad.org]].

** TODO Notifications

See [[./config/dunst.org][config/dunst.org]].

** TODO Screenshots

See [[./config/flameshot.org][config/flameshot.org]].

Several scripts are available under [[./scripts/][scripts/]].

* Emacs

Install the preferred =gccemacs=. Details at http://akrl.sdf.org/gccemacs.html.
CMake is necessary in order to compile the dependencies to =vterm= at runtime.

See https://github.com/alexmurray/emacs-snap for the Snap package.

See https://github.com/angrybacon/dotemacs for my configuration.

* Vim

Install =vim= or =gvim=. I mostly use Emacs but sometimes Vim too so very minor
tweaks are enough.

#+BEGIN_SRC sh :tangle ~/.vimrc
:syntax on
:set cursorline
#+END_SRC

* Git

** Base Configuration

=~/.gitconfig=

#+BEGIN_SRC conf :tangle ~/.gitconfig
[user]
    email = mathieumarques78@gmail.com
    name = Mathieu Marques
[core]
    excludesfile = ~/.gitignore
    ignorecase = true
[pull]
    rebase = true
[rebase]
    autosquash = true
#+END_SRC

=~/.gitignore=

#+BEGIN_SRC conf :tangle ~/.gitignore
.dir-locals.el
#+END_SRC

** TODO Signed Commits

1. First generate a key for your machine

   #+BEGIN_SRC sh
   gpg --full-gen-key
   gpg --list-secret-keys --keyid-format LONG <email>
   gpg --armor --export 1234567890ABCDEF
   #+END_SRC

2. Copy the public key to your Git hosting platform

3. Add the secret key to your repository

   #+BEGIN_SRC conf
   [user]
       signingkey = 1234567890ABCDEF
   [commit]
       gpgsign = true
   #+END_SRC

=~./profile=

#+BEGIN_SRC diff
+export GPG_TTY=$TTY
#+END_SRC

* TODO SSH

#+BEGIN_SRC sh
paru -S openssh xclip
ssh-keygen -t ed25519
xclip -sel clip < ~/.ssh/id_ed25519.pub
#+END_SRC

* TODO Games

** Battle.net

Battlet.net applications run best under Lutris. It has many dependencies based
on Wine. Follow the instructions at
[[https://github.com/lutris/docs/blob/master/Battle.Net.md]] and install games
from Lutris directly.

#+BEGIN_SRC sh
paru -S lutris
#+END_SRC

** Steam

For Steam games that are officially supported on Linux, install the =steam=
package after enabling =multilib= repositories in your Pacman configuration and
ensuring your graphic drivers are Vulkan-enabled.

#+BEGIN_SRC sh
paru -S steam
#+END_SRC

* Other Utilities

#+BEGIN_SRC sh
sudo apt install \
    gdu htop most rsync tree \
    flameshot gimp \
    qbittorrent vlc
#+END_SRC

#+BEGIN_SRC sh
sudo snap install \
    brave firefox \
    btop \
    discord slack \
    spotify \
    plexmediaserver
#+END_SRC
