#+TITLE: Linux
#+AUTHOR: Mathieu Marques
#+PROPERTY: header-args :results silent

This file documents the steps I've followed to install my daily machines,
usually running either Arch or Fedora.

* Checklist

** Install Core Dependencies and Packages

#+BEGIN_SRC sh
paru -S \
    cmake git openssh \
    highlight xclip \
    vi vim
#+END_SRC

#+BEGIN_SRC sh
sudo dnf install \
    cmake git openssh \
    highlight xclip \
    vi vim
#+END_SRC

** Configure Visudo

Run =sudo visudo= in order to customize sudoers settings. Customize the default
editor to use and enable asterisk feedback in password prompts.

#+BEGIN_SRC diff
+Defaults editor=/usr/bin/vim
-Defaults env_reset
+Defaults env_reset, pwfeedback
#+END_SRC

** Create Default Home Directories

If they are not already, create the initial home directories with
=xdg-user-dirs-update=.

* Shell

** User Session

Edit =~/.profile= to set the path for user binaries and increase the keyboard
repeat rate.

#+BEGIN_SRC sh :tangle ~/.profile
if [ -d "$HOME/.local/bin" ] ; then
  PATH="$HOME/.local/bin:$PATH"
fi

xset r rate 200 50
#+END_SRC

** Zsh

Install =zsh= then set it as your default shell.

#+BEGIN_SRC sh
chsh -s $(which zsh)
ln -s ~/.profile ~/.zprofile
#+END_SRC

See [[./config/zsh.org][config/zsh.org]].

** Terminal

See [[./config/kitty.org][config/kitty.org]].

* X

** =~/.Xresources=

Increase the base DPI by 25%.

#+BEGIN_SRC conf :tangle ~/.Xresources
Xft.dpi: 132
#+END_SRC

** =~/.xinitrc=

#+BEGIN_SRC sh :shebang "#!/bin/sh" :tangle ~/.xinitrc
[ -f /etc/xprofile ] && . /etc/xprofile
[ -f "$HOME/.xprofile" ] && . ~/.xprofile
#+END_SRC

** =~/.xprofile=

#+BEGIN_SRC sh :tangle ~/.xprofile
[ -f "$HOME/.fehbg" ] && ~/.fehbg &
picom --experimental-backends -b
#+END_SRC

** Automatically Mount External Drives

Given an external hard drive /Phoenix/ plugged in =sdb=.

#+BEGIN_SRC sh
sudo mkdir /media/Phoenix               # Create the mount point
sudo fdisk -l                           # Identify the drive
sudo blkid | grep sdb                   # Retrieve the UUID
#+END_SRC

Edit =/etc/fstab= to add the drive mount point.

#+BEGIN_SRC diff
+UUID=F8D2-30CF  /media/Phoenix  exfat  defaults  0  0
#+END_SRC

Confirm proper mouting with =sudo mount -a=.

* Fonts

** Font Dependencies

Other sections from this document will assume these fonts are already installed:

- /Cascadia Code/
- /Google Sans/ or /Product Sans/
- /Roboto Slab/

If manually installing the fonts, download their respective TTF or OTF files and
move them to =/usr/local/share/fonts/=. Run =fc-cache= to ensure the font cache
integrity.

** Font Preferences

Set default fonts for =monospace=, =serif= and =sans-serif= classes.

#+BEGIN_SRC xml :tangle /sudo::/etc/fonts/local.conf
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE fontconfig SYSTEM "urn:fontconfig:fonts.dtd">
<fontconfig>
  <match target="pattern">
    <test qual="any" name="family">
      <string>monospace</string>
    </test>
    <edit name="family" mode="assign" binding="same">
      <string>Cascadia Code</string>
    </edit>
  </match>
  <match target="pattern">
    <test qual="any" name="family">
      <string>sans-serif</string>
    </test>
    <edit name="family" mode="assign" binding="same">
      <string>Product Sans</string>
    </edit>
  </match>
  <match target="pattern">
    <test qual="any" name="family">
      <string>serif</string>
    </test>
    <edit name="family" mode="assign" binding="same">
      <string>Roboto Slab</string>
    </edit>
  </match>
</fontconfig>
#+END_SRC

* Desktop

** Background

Install =feh= and run it once to initialize the bootstrap executable.

#+BEGIN_SRC sh
feh --bg-fill Pictures/Wallpapers/filename.ext
#+END_SRC

** Compositor

See [[./config/picom.org][config/picom.org]].

** Window Manager

I use =qtile= daily but other historical configuration can be found below.

*** EXWM

See [[https://github.com/angrybacon/dotemacs/blob/master/DESKTOP.org]].

*** Qtile

See [[./config/qtile.org][config/qtile.org]].

*** XMonad

See [[./config/xmonad.org][config/xmonad.org]].

** Default Applications

Prefer settings those through GUI but in case of failure, edit
=~/.config/mimeapps.list=.

#+BEGIN_SRC conf
[Default Applications]
text/html=brave-browser.desktop
x-scheme-handler/http=brave-browser.desktop
x-scheme-handler/https=brave-browser.desktop
x-scheme-handler/about=brave-browser.desktop
x-scheme-handler/unknown=brave-browser.desktop
video/mp4=vlc.desktop
video/x-matroska=vlc.desktop

[Added Associations]
video/mp4=vlc.desktop
video/x-matroska=vlc.desktop
#+END_SRC

** TODO Notifications

See [[./config/dunst.org][config/dunst.org]].

** TODO Screenshots

See [[./config/flameshot.org][config/flameshot.org]].

* Emacs

Emacs now ships with native compilation by default /almost/ everywhere. More
details at [[http://akrl.sdf.org/gccemacs.html]].

See https://github.com/angrybacon/dotemacs for my configuration.

* Vim

I mostly use Emacs but sometimes Vim too so minor tweaks are enough.

See [[./config/vim.org][config/vim.org]].

The above configuration tangles to =/etc/vimrc.local=. Load it from the
system-wide configuration at =/etc/vimrc=.

#+BEGIN_SRC diff
+if filereadable("/etc/vimrc.local")
+  source /etc/vimrc.local
+endif
#+END_SRC

And link it to your user.

#+BEGIN_SRC sh
ln -s /etc/vimrc.local ~/.vimrc
#+END_SRC

* Git

** Base Configuration

Default settings for all Git projects.

#+BEGIN_SRC conf :tangle ~/.gitconfig
[user]
    email = mathieumarques78@gmail.com
    name = Mathieu Marques
[core]
    excludesfile = ~/.gitignore
    ignorecase = true
[pull]
    rebase = true
[rebase]
    autosquash = true
#+END_SRC

Default ignore list for all Git projects.

#+BEGIN_SRC conf :tangle ~/.gitignore
.dir-locals.el
#+END_SRC

* SSH

Create your public key and push it to the clipboard for further use.

#+BEGIN_SRC sh
ssh-keygen -t ed25519
xclip -sel clip < ~/.ssh/id_ed25519.pub
#+END_SRC

* Other Utilities

#+BEGIN_SRC sh
sudo dnf install \
    deluge feh flameshot kitty gimp \
    baobab ncdu pcmanfm \
    btop htop \
    neofetch ripgrep tree
#+END_SRC

#+BEGIN_SRC sh
flatpak install \
    com.brave.Browser \
    com.discordapp.Discord \
    com.slack.Slack \
    com.spotify.Client \
    org.videolan.VLC
#+END_SRC

* COMMENT Local Variables

# Local Variables:
# after-save-hook: (org-babel-tangle t)
# End:
