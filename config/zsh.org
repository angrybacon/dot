#+TITLE: Zsh
#+AUTHOR: Mathieu Marques
#+PROPERTY: header-args:sh :tangle ~/.zshrc

* Parsing Arguments

#+BEGIN_SRC sh
unsetopt nomatch
#+END_SRC

* Command History

#+BEGIN_SRC sh
export HISTFILE=~/.zsh_history
export HISTSIZE=1000
export SAVEHIST=1000
setopt share_history
#+END_SRC

* Pager

Customize the default pager as well the pager used with =man=.

#+BEGIN_SRC sh
export LESS="--raw-control-chars --squeeze-blank-lines --use-color"
export MANPAGER='less --long-prompt +Gg'
export PAGER=less
#+END_SRC

* Aliases

#+BEGIN_SRC sh
alias arecordvv='arecord -vv -f dat /dev/null'
alias arecordvvv='arecord -vvv -f dat /dev/null'
alias df='df --human-readable'
alias diff='diff --color'
alias dog='highlight -O ansi'
alias du='du --human-readable'
alias egrep='egrep --color'
alias fgrep='fgrep --color'
alias grep='grep --color --ignore-case'
alias la='ll -A'
alias ll='ls -ghlo'
alias lll='ls -hl'
alias ls='ls --color --group-directories-first --literal -v'
alias rsync='rsync --human-readable --info=progress2'
alias sudo='sudo '
alias tree='tree -C'
#+END_SRC

* Keys

Add support for control-modified left and right to move by word.

#+BEGIN_SRC sh
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word
#+END_SRC

* Prompt

See https://github.com/sindresorhus/pure to install the =pure= prompt.

#+BEGIN_SRC sh
fpath+=$HOME/.zsh/pure
autoload -U promptinit
promptinit
prompt pure
#+END_SRC

* Completion

#+BEGIN_SRC sh
autoload compinit
compinit -i
#+END_SRC

Allow case-insensitive completion candidates.

#+BEGIN_SRC sh
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
#+END_SRC

* Node Version Manager

Bootstrap NVM.

#+BEGIN_SRC sh
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
#+END_SRC

Automatically read =.nvmrc= at the root of your project to use the preferred
Node.js version.

#+BEGIN_SRC sh
load-nvmrc() {
  local defaultVersion="$(nvm version)"
  local nvmrc="$(nvm_find_nvmrc)"
  if [ -n "$nvmrc" ]; then
    local newVersion=$(nvm version "$(cat "${nvmrc}")")
    if [ "$newVersion" = "N/A" ]; then
      nvm install
    elif [ "$newVersion" != "$defaultVersion" ]; then
      nvm use
    fi
  elif [ "$defaultVersion" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}

autoload -U add-zsh-hook
add-zsh-hook chpwd load-nvmrc
load-nvmrc
#+END_SRC

* COMMENT Local Variables

# Local Variables:
# after-save-hook: (org-babel-tangle t)
# End:
